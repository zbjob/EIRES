TYPE GSubmit {
	timestamp,
	id,
	missing_info,
	job_id,
	task_index,
	task_id,
	scheduling_class,
	priority,
	res_req_cpu,
	res_req_ram,
	res_req_disk,
	different_machine
};

TYPE GSchedule {
	timestamp,
	id,
    job_id,
	task_id,
	machine_id
};

TYPE GEvict {
	timestamp,
	id,
    job_id,
	task_id,
	machine_id
};

TYPE GFail {
	timestamp,
	id,
    job_id,
	task_id,
    machine_id
};

TYPE GFinish {
	timestamp,
	id,
    job_id,
	task_id,
    machine_id
};

TYPE GKill {
	timestamp,
	id,
    job_id,
	task_id,
    machine_id

};

TYPE GLost {
	timestamp,
	id,
    job_id,
	task_id,
    machine_id
};

TYPE GUpdatePending {
	timestamp,
	id,
    job_id,
	task_id,
	missing_info,
	scheduling_class,
	priority,
	res_req_cpu,
	res_req_ram,
	res_req_disk,
	different_machine
};

TYPE GUpdateRunning {
	timestamp,
	id,
    job_id,
	task_id,
	missing_info,
	machine_id,
	scheduling_class,
	priority,
	res_req_cpu,
	res_req_ram,
	res_req_disk,
	different_machine
};

TYPE GFail3 {
	timestamp,
	f1,
	f2,
	f3
};

TYPE GReturn3 {
	timestamp,
	a,
	b,
	c
};

TYPE GReturn6{
    timestamp,
    a1,
    a2,
    a3,
    a4,
    a5,
    a6
};


QUERY P1
EVENT SEQ(GSubmit a, GEvict b, GSubmit c)
WHERE [job_id] 
WITHIN 2h
RETURN GReturn3(a.timestamp, a._ID, b._ID, c._ID);

QUERY P2
EVENT SEQ(GEvict a,  GSubmit+ b, GFail c)
WHERE [task_id] && count(b._ID) == 5  
WITHIN 1h 
RETURN GReturn3(a.timestamp, count(b._ID), b.task_id, c.task_id);


QUERY P3
EVENT SEQ(GSchedule a, GSchedule b, GEvict c)
WHERE a.machine_id == b.machine_id && a.task_id == c.task_id
WITHIN 3h
RETURN GReturn3(a.timestamp, a.machine_id, a.task_id, c._ID);

QUERY fail_any
EVENT SEQ(GFail+ f2, GFinish f3)
WHERE [task_id] && count(f2._ID) < f3._ID
WITHIN 10m
RETURN GFail3(f2.timestamp, count(f2._ID), f2._ID, f3._ID);

QUERY P4
EVENT SEQ(GFail f1, GFail f2, GFail f3)
WHERE [task_id]
WITHIN 2h 
RETURN GFail3(f1.timestamp, f1.timestamp, f2.timestamp, f3.timestamp);

QUERY fail3_finish
EVENT SEQ(GFail f1, ~GFinish stop, GFail f2, GFail f3)
WHERE [task_id]
WITHIN 30m
RETURN GFail3(f1.timestamp, f1._OFFSET, f2._OFFSET, f3._OFFSET);

QUERY fail3_many
EVENT SEQ(GFail f1, ~GFail fo, GFail f2, GFail f3)
WHERE f1.task_id == f2.task_id && f1.task_id == f3.task_id && f1.task_id != fo.task_id
WITHIN 2h 
RETURN GFail3(f1.timestamp, f1.task_id, f2.task_id, f3.task_id);

QUERY P5
EVENT SEQ(GSubmit+ a, GFail b)
WHERE [task_id] && count(a._ID) > 30 
WITHIN 1h 
RETURN GReturn3(a.timestamp, count(a._ID), a.timestamp, b.timestamp);

QUERY P6
EVENT SEQ(GSubmit a, GSchedule b, GEvict c, GSchedule d, GEvict e, GSchedule f, GFail g)
WHERE [task_id] && b.machine_id == c.machine_id && b.machine_id != d.machine_id && d.machine_id == e.machine_id && d.machine_id != f.machine_id && f.machine_id == g.machine_id
WITHIN 1h 
RETURN GReturn3(a.timestamp, a.task_id, b.machine_id, d.machine_id, f.machine_id);

QUERY P7
EVENT SEQ(GSubmit a, GSchedule b, GEvict c, GSchedule d, GEvict e, GSchedule f, GFail g)
WHERE [task_id] 
WITHIN 1h 
RETURN GReturn3(a.timestamp, a.task_id, b.machine_id, d.machine_id, f.machine_id);
